/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    /** List available data sets */
    get: operations["list-data-sets"];
  };
  "/{dataset}/{version}/fields": {
    /**
     * Provides the general information about the API and the list of fields that can be used to query the dataset.
     * @description This GET API returns the list of all the searchable field names that are in the oa_citations. Please see the 'fields' attribute which returns an array of field names. Each field or a combination of fields can be searched using the syntax options shown below.
     */
    get: operations["list-searchable-fields"];
  };
  "/{dataset}/{version}/records": {
    /**
     * Provides search capability for the data set with the given search criteria.
     * @description This API is based on Solr/Lucene Search. The data is indexed using SOLR. This GET API returns the list of all the searchable field names that are in the Solr Index. Please see the 'fields' attribute which returns an array of field names. Each field or a combination of fields can be searched using the Solr/Lucene Syntax. Please refer https://lucene.apache.org/core/3_6_2/queryparsersyntax.html#Overview for the query syntax. List of field names that are searchable can be determined using above GET api.
     */
    post: operations["perform-search"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    dataSetList: {
      total?: number;
      apis?: {
          /** @description To be used as a dataset parameter value */
          apiKey?: string;
          /** @description To be used as a version parameter value */
          apiVersionNumber?: string;
          /**
           * Format: uriref
           * @description The URL describing the dataset's fields
           */
          apiUrl?: string;
          /**
           * Format: uriref
           * @description A URL to the API console for each API
           */
          apiDocumentationUrl?: string;
        }[];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** List available data sets */
  "list-data-sets": {
    responses: {
      /** @description Returns a list of data sets */
      200: {
        content: {
          "application/json": components["schemas"]["dataSetList"];
        };
      };
    };
  };
  /**
   * Provides the general information about the API and the list of fields that can be used to query the dataset.
   * @description This GET API returns the list of all the searchable field names that are in the oa_citations. Please see the 'fields' attribute which returns an array of field names. Each field or a combination of fields can be searched using the syntax options shown below.
   */
  "list-searchable-fields": {
    parameters: {
      path: {
        /**
         * @description Name of the dataset.
         * @example oa_citations
         */
        dataset: string;
        /**
         * @description Version of the dataset.
         * @example v1
         */
        version: string;
      };
    };
    responses: {
      /** @description The dataset API for the given version is found and it is accessible to consume. */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description The combination of dataset name and version is not found in the system or it is not published yet to be consumed by public. */
      404: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Provides search capability for the data set with the given search criteria.
   * @description This API is based on Solr/Lucene Search. The data is indexed using SOLR. This GET API returns the list of all the searchable field names that are in the Solr Index. Please see the 'fields' attribute which returns an array of field names. Each field or a combination of fields can be searched using the Solr/Lucene Syntax. Please refer https://lucene.apache.org/core/3_6_2/queryparsersyntax.html#Overview for the query syntax. List of field names that are searchable can be determined using above GET api.
   */
  "perform-search": {
    parameters: {
      path: {
        /** @description Version of the dataset. */
        version: string;
        /** @description Name of the dataset. In this case, the default value is oa_citations */
        dataset: string;
      };
    };
    requestBody?: {
      content: {
        "application/x-www-form-urlencoded": {
          /**
           * @description Uses Lucene Query Syntax in the format of propertyName:value, propertyName:[num1 TO num2] and date range format: propertyName:[yyyyMMdd TO yyyyMMdd]. In the response please see the 'docs' element which has the list of record objects. Each record structure would consist of all the fields and their corresponding values.
           * @default *:*
           */
          criteria: string;
          /**
           * @description Starting record number. Default value is 0.
           * @default 0
           */
          start?: number;
          /**
           * @description Specify number of rows to be returned. If you run the search with default values, in the response you will see 'numFound' attribute which will tell the number of records available in the dataset.
           * @default 100
           */
          rows?: number;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": {
              [key: string]: Record<string, never>;
            }[];
        };
      };
      /** @description No matching record found for the given criteria. */
      404: {
        content: never;
      };
    };
  };
}
